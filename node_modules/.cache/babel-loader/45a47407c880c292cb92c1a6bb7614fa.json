{"ast":null,"code":"const CLIENT_ID = 'c9e1239b113849e299383a1174dc3316';\nconst REDIRECT_URI = 'http://localhost:3000';\nexport const spotify = {\n  ACCESS_TOKEN: '',\n\n  getAccessToken() {\n    if (this.ACCESS_TOKEN) return this.ACCESS_TOKEN;\n    const regex = /access_token=([^&]*)/;\n    let access = window.location.href.match(regex);\n\n    if (access) {\n      this.ACCESS_TOKEN = access[0].substring(access[0].indexOf('=') + 1);\n      let expiration_time = window.location.href.match(/expires_in=([^&]*)/);\n      expiration_time = expiration_time[0].substring(expiration_time[0].indexOf('=') + 1);\n      window.setTimeout(() => this.ACCESS_TOKEN = '', expiration_time * 1000);\n      window.history.pushState('Access Token', null, '/');\n    } else {\n      window.location.replace(`https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&response_type=token&scope=playlist-modify-public&redirect_uri=${REDIRECT_URI}`);\n    }\n  },\n\n  search: function (term) {\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: 'Bearer ' + this.ACCESS_TOKEN\n      }\n    });\n  },\n  getUserID: function () {\n    return fetch('https://api.spotify.com/v1/me', {\n      headers: {\n        Authorization: 'Bearer ' + this.ACCESS_TOKEN\n      }\n    });\n  },\n  createPlayList: function (userId, playListname) {\n    return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n      headers: {\n        Authorization: 'Bearer ' + this.ACCESS_TOKEN\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        name: playListname\n      })\n    });\n  },\n  saveTrackstoPlayList: function (playListId, uris) {\n    return fetch(`https://api.spotify.com/v1/playlists/${playListId}/tracks`, {\n      headers: {\n        Authorization: 'Bearer ' + this.ACCESS_TOKEN\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        uris: uris\n      })\n    });\n  }\n};","map":{"version":3,"sources":["/home/chedi/Desktop/jammming/src/util/Spotify.js"],"names":["CLIENT_ID","REDIRECT_URI","spotify","ACCESS_TOKEN","getAccessToken","regex","access","window","location","href","match","substring","indexOf","expiration_time","setTimeout","history","pushState","replace","search","term","fetch","headers","Authorization","getUserID","createPlayList","userId","playListname","method","body","JSON","stringify","name","saveTrackstoPlayList","playListId","uris"],"mappings":"AAAA,MAAMA,SAAS,GAAG,kCAAlB;AACA,MAAMC,YAAY,GAAG,uBAArB;AACA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,YAAY,EAAG,EADM;;AAEpBC,EAAAA,cAAc,GACd;AACI,QAAI,KAAKD,YAAT,EACA,OAAO,KAAKA,YAAZ;AACH,UAAME,KAAK,GAAG,sBAAd;AACA,QAAIC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2BL,KAA3B,CAAb;;AACA,QAAIC,MAAJ,EACA;AACG,WAAKH,YAAL,GAAoBG,MAAM,CAAC,CAAD,CAAN,CAAUK,SAAV,CAAoBL,MAAM,CAAC,CAAD,CAAN,CAAUM,OAAV,CAAkB,GAAlB,IAAuB,CAA3C,CAApB;AACA,UAAIC,eAAe,GAAGN,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CAAtB;AACAG,MAAAA,eAAe,GAAGA,eAAe,CAAC,CAAD,CAAf,CAAmBF,SAAnB,CAA6BE,eAAe,CAAC,CAAD,CAAf,CAAmBD,OAAnB,CAA2B,GAA3B,IAAgC,CAA7D,CAAlB;AACAL,MAAAA,MAAM,CAACO,UAAP,CAAkB,MAAM,KAAKX,YAAL,GAAoB,EAA5C,EAAgDU,eAAe,GAAG,IAAlE;AACAN,MAAAA,MAAM,CAACQ,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AAEF,KARD,MASC;AACCT,MAAAA,MAAM,CAACC,QAAP,CAAgBS,OAAhB,CAAyB,oDAAmDjB,SAAU,kEAAiEC,YAAa,EAApK;AACA;AACF,GApBmB;;AAqBpBiB,EAAAA,MAAM,EAAE,UAASC,IAAT,EACR;AACG,WAAOC,KAAK,CAAE,kDAAiDD,IAAK,EAAxD,EAA2D;AAAEE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAY,KAAKnB;AAAlC;AAAX,KAA3D,CAAZ;AAEF,GAzBmB;AA0BpBoB,EAAAA,SAAS,EAAE,YACX;AACG,WAAOH,KAAK,CAAC,+BAAD,EAAmC;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAY,KAAKnB;AAAlC;AAAX,KAAnC,CAAZ;AACF,GA7BmB;AA8BpBqB,EAAAA,cAAc,EAAE,UAASC,MAAT,EAAgBC,YAAhB,EAChB;AACG,WAAON,KAAK,CAAE,oCAAmCK,MAAO,YAA5C,EAA0D;AAAEJ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAY,KAAKnB;AAAlC,OAAX;AAA8DwB,MAAAA,MAAM,EAAE,MAAtE;AAAgFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACxKC,QAAAA,IAAI,EAAEL;AADkK,OAAf;AAAtF,KAA1D,CAAZ;AAGF,GAnCmB;AAoCpBM,EAAAA,oBAAoB,EAAE,UAASC,UAAT,EAAoBC,IAApB,EACtB;AACE,WAAOd,KAAK,CAAE,wCAAuCa,UAAW,SAApD,EAA8D;AAAEZ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAY,KAAKnB;AAAlC,OAAX;AAA8DwB,MAAAA,MAAM,EAAE,MAAtE;AAAgFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAC5KI,QAAAA,IAAI,EAAEA;AADsK,OAAf;AAAtF,KAA9D,CAAZ;AAGD;AAzCmB,CAAhB","sourcesContent":["const CLIENT_ID = 'c9e1239b113849e299383a1174dc3316' ; \r\nconst REDIRECT_URI = 'http://localhost:3000' ; \r\nexport const spotify = { \r\n  ACCESS_TOKEN : '' , \r\n   getAccessToken()\r\n   { \r\n       if (this.ACCESS_TOKEN) \r\n       return this.ACCESS_TOKEN; \r\n    const regex = /access_token=([^&]*)/ ; \r\n    let access = window.location.href.match(regex); \r\n    if (access) \r\n    {\r\n       this.ACCESS_TOKEN = access[0].substring(access[0].indexOf('=')+1); \r\n       let expiration_time = window.location.href.match(/expires_in=([^&]*)/); \r\n       expiration_time = expiration_time[0].substring(expiration_time[0].indexOf('=')+1) ; \r\n       window.setTimeout(() => this.ACCESS_TOKEN = '', expiration_time * 1000);\r\n       window.history.pushState('Access Token', null, '/');\r\n\r\n    }else \r\n     {\r\n      window.location.replace(`https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&response_type=token&scope=playlist-modify-public&redirect_uri=${REDIRECT_URI}`); \r\n     }\r\n   }, \r\n   search: function(term) \r\n   { \r\n      return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, { headers: { Authorization: 'Bearer ' + this.ACCESS_TOKEN }}) ; \r\n         \r\n   }, \r\n   getUserID: function() \r\n   { \r\n      return fetch('https://api.spotify.com/v1/me' , { headers: { Authorization: 'Bearer ' + this.ACCESS_TOKEN }}) ;     \r\n   } , \r\n   createPlayList: function(userId,playListname) \r\n   { \r\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists` , { headers: { Authorization: 'Bearer ' + this.ACCESS_TOKEN } , method: \"POST\" ,  body: JSON.stringify({\r\n         name: playListname\r\n    })  }  )\r\n   }, \r\n   saveTrackstoPlayList: function(playListId,uris) \r\n   { \r\n     return fetch(`https://api.spotify.com/v1/playlists/${playListId}/tracks`, { headers: { Authorization: 'Bearer ' + this.ACCESS_TOKEN } , method: \"POST\" ,  body: JSON.stringify({\r\n        uris: uris\r\n   })  } )\r\n   } \r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}